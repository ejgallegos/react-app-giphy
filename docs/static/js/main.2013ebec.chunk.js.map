{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","gif","className","src","alt","xmlns","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","gifItem","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAACC,GACxB,OACI,mCACI,oBAAIC,UAAU,QAAd,SACI,6BACI,sBAAKA,UAAU,yCAAf,UACI,qBAAKA,UAAU,cAAcC,IAAKF,EAAId,IAAKiB,IAAKH,EAAIJ,QACpD,qBAAKK,UAAU,gBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,YAAYG,MAAM,6BAAjC,SAA8D,2BAC9D,qBAAKH,UAAU,oBAAf,SACI,oBAAIA,UAAU,cAAd,SAA6BD,EAAIJ,yBCTxDS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEtB,ECFwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAACtB,IAKGuB,EDrB4BK,CAAa5B,GAAlC6B,EAAd,EAAQtB,KAAee,EAAvB,EAAuBA,QAEvB,OACI,qCACI,oBAAIL,UAAU,sDAAd,SAAqEjB,IACpEsB,GAAW,mBAAGL,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,QAAf,SAGQY,EAAQpB,KAAI,SAAAO,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIL,aEbxBmB,EAAe,WAIxB,MAAoC5C,mBAAS,CAAC,KAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAUA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWtB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCrBjCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2013ebec.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        //console.log('Submit');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=pZa5wgIbyTYjtgkijajtDOki33ytdM59`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    // console.log(data);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = (gif) => {\r\n    return (\r\n        <>\r\n            <ul className=\"cards\">\r\n                <li>\r\n                    <div className=\"card animate__animated animate__fadeIn\">\r\n                        <img className=\"card__image\" src={gif.url} alt={gif.title} />\r\n                        <div className=\"card__overlay\">\r\n                            <div className=\"card__header\">\r\n                                <svg className=\"card__arc\" xmlns=\"http://www.w3.org/2000/svg\"><path /></svg>\r\n                                <div className=\"card__header-text\">\r\n                                    <h3 className=\"card__title\">{gif.title}</h3>\r\n                                </div>\r\n                            </div>\r\n                            {/* <p className=\"card__description\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Asperiores, blanditiis?</p> */}\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: gifItem, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce animate__delay-2s\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"cards\">\r\n                {\r\n\r\n                    gifItem.map(gif =>\r\n                        <GifGridItem\r\n                            key={gif.id}\r\n                            {...gif}\r\n                        />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n    // const handleAdd = () => {\r\n    //     //1) \r\n    //     //setCategories([...categories, 'HunterXHunter']);\r\n    //     //2)\r\n    //     setCategories(cats => [...cats, 'HunterXHunter']);\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}